---
title: "Quantitativer Ergebnisteil"
author: "Gruppe A4"
date: "`r format(Sys.Date(), '%d.%m.%Y')`"
lang: de
format:
  pdf:
    documentclass: article
    papersize: a4
    fontsize: 12pt
  html: default
execute:
  echo: false      # R-Code unterdrücken
  message: false
  warning: false
number-sections: true
---
```{r}
#| label: prepare-data
#| include: false
# Pakete --------------------------------------------------------------
req <- c("tidyverse", "psych", "gt", "effsize", "broom", "glue", "purrr")
miss <- req[!req %in% installed.packages()[, "Package"]]
if (length(miss)) install.packages(miss, dep = TRUE)
invisible(lapply(req, library, character.only = TRUE))

# Rohdaten (CSV liegt *außerhalb* des Git-Repos!) ---------------------
raw <- readr::read_csv("data/raw/data_combined.csv", show_col_types = FALSE)

# Item-Listen ---------------------------------------------------------
HCT_items <- c(
  "hct_r01","hct_r02","hct_r03","hct_r04","hct_r05",
  "hct_t01","hct_t02","hct_t03","hct_t04","hct_t05",
  "hct_u01","hct_u02","hct_u03","hct_u04","hct_u05"
)

ATI_items   <- sprintf("ati_%d", 1:9)
ATI_neg <- c("ati_3", "ati_6", "ati_8")

DLR_items   <- c(
  "ki_dlr_wat_i","ki_dlr_wat_w","ki_dlr_wat_e",
  "ki_dlr_wat_m","ki_dlr_wat_z","ki_dlr_wat_a",
  "ki_dlr_wat_f","ki_dlr_wat_b"
)

lists <- list(HCT_items = HCT_items,
              ATI_items = ATI_items,
              DLR_items = DLR_items)

# Existenz-Check & numerische Konvertierung ---------------------------
purrr::walk2(lists, names(lists), \(vars, name){
  miss <- setdiff(vars, names(raw))
  if (length(miss))
    stop(glue::glue("Fehlende Variablen in {name}: {paste(miss, collapse=', ')}"))
})

raw <- raw |>
  mutate(across(all_of(unlist(lists)), ~ readr::parse_number(as.character(.))))

# Skalen umpolen (negativ formulierte Items) --------------------------
scale_min_ATI <- min(raw[ATI_items], na.rm = TRUE)
scale_max_ATI <- max(raw[ATI_items], na.rm = TRUE)

rev_ati <- \(x) ifelse(is.na(x), NA, scale_max_ATI + scale_min_ATI - x)

# Filter + Scores -----------------------------------------------------
data <- raw |>
  filter(age >= 18, smfrequency >= 3) |>
  mutate(
    across(all_of(ATI_neg), rev_ati)
  ) |>
  mutate(
    HCT       = rowMeans(pick(all_of(HCT_items)), na.rm = TRUE),
    ATI_total = rowMeans(pick(all_of(ATI_items)),   na.rm = TRUE),
    ATI_group = if_else(ATI_total >= median(ATI_total, na.rm = TRUE),
                        "High", "Low"),
    DLR_KI    = rowMeans(pick(all_of(DLR_items)),   na.rm = TRUE)
  )

# Reliabilitäten ------------------------------------------------------
alpha_HCT <- psych::alpha(select(data, all_of(HCT_items)))$total$raw_alpha
alpha_ATI <- psych::alpha(select(data, all_of(ATI_items)))$total$raw_alpha
alpha_DLR <- psych::alpha(select(data, all_of(DLR_items)))$total$raw_alpha
```

```{r}
#| label: sample-info
#| include: false
#| tbl-cap: "Deskriptive Statistik"
#| tbl-pos: "H"
sample_stats <- data |>
  summarise(
    N          = n(),
    mean_age   = mean(age, na.rm = TRUE),
    sd_age     = sd(age,  na.rm = TRUE),
    median_age = median(age, na.rm = TRUE)
)

gender_tbl <- data |>
  count(gender) |>
  mutate(pct = round(100 * n / sum(n), 1))
```

```{r desc-table}
#| tbl-cap: "Deskriptive Statistik der Zielvariablen"
#| tbl-id: tbl-desc
#| tbl-pos: "H"
#| echo: false
#| results: asis

suppressPackageStartupMessages(library(kableExtra))

desc_tbl <- data |>
  select(HCT, ATI_total, DLR_KI) |>
  psych::describe() |>
  tibble::rownames_to_column("Variable") |>
  rename(N = n) |>
  mutate(Range = max - min) |>
  select(Variable, N, mean, median, sd, min, max, range) |>
  mutate(alpha = round(c(alpha_HCT, alpha_ATI, alpha_DLR), 2))

desc_tbl |>
  kbl(
    format   = "latex",
    booktabs = TRUE,
    digits   = 2,
    caption  = "Deskriptive Statistik der Zielvariablen"
  ) |>
  kable_styling(latex_options = "HOLD_position")
```

```{r}
#| label: t-test
#| echo: false
# Mittelwertvergleich -------------------------------------------------
t_res <- t.test(HCT ~ ATI_group, data = data, var.equal = FALSE)

# Effektstärke (Cohen d) – Formel-Methode von {effsize}
d_res <- effsize::cohen.d(HCT ~ ATI_group, data = data, pooled = TRUE)

# Plot-Daten ----------------------------------------------------------
plot_t <- data |>
  group_by(ATI_group) |>
  summarise(
    mean = mean(HCT, na.rm = TRUE),
    se   = sd(HCT,  na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
)

# Objekt für Inline-Zitate (t, p, d)
t_out <- broom::tidy(t_res) |>
  mutate(d = round(unname(d_res$estimate), 2))
```


```{r}
#| label: cor
#| echo: false
#| warning: false
cor_res <- cor.test(data$DLR_KI, data$HCT,
                    use = "pairwise.complete.obs",
                    method = "spearman")   # robust gegen Schiefe
r_out   <- broom::tidy(cor_res)
```
